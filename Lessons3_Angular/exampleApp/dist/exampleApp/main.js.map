{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/model/datasource.model.ts","webpack:///./src/app/model/model.module.ts","webpack:///./src/app/model/product.model.ts","webpack:///./src/app/model/repository.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { FormsModule, ReactiveFormsModule  } from \"@angular/forms\";\r\nimport { ModelModule } from \"./model/model.module\";\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, ReactiveFormsModule,\r\n              ModelModule],\r\n    bootstrap: []\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"./product.model\";\r\n\r\n@Injectable()\r\nexport class StaticDataSource {\r\n    private data:Product[];\r\n\r\n    constructor(){\r\n        this.data = new Array<Product>(\r\n          new Product(1, \"Kayak\", \"Watersports\", 275),\r\n          new Product(2, \"Lifejacket\", \"Watersports\", 48.95),\r\n          new Product(3, \"Soccer Ball\", \"Soccer\", 19.50),\r\n          new Product(4, \"Corner Flags\", \"Soccer\", 34.95),\r\n          new Product(5, \"Thinking Cap\", \"Chess\", 16)\r\n        );\r\n    }\r\n\r\n    getData(): Product[] {\r\n        return this.data;\r\n    }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { StaticDataSource } from \"./datasource.model\";\r\nimport { Model } from \"./repository.model\";\r\n\r\n@NgModule({\r\n    providers: [Model, StaticDataSource]\r\n})\r\nexport class ModelModule { }\r\n","export class Product {\r\n\r\n    constructor(public id?: number,\r\n                public name?: string,\r\n                public category?: string,\r\n                public price?: number) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"./product.model\";\r\nimport { StaticDataSource } from \"./datasource.model\";\r\n\r\n@Injectable()\r\nexport class Model {\r\n    //private dataSource: SimpleDataSource;\r\n    private products: Product[];\r\n    private locator = (p:Product, id:number) => p.id == id;\r\n\r\n    constructor(private dataSource: StaticDataSource){\r\n        //this.dataSource = new SimpleDataSource();\r\n        this.products = new Array<Product>();\r\n        this.dataSource.getData().forEach(p => this.products.push(p));\r\n    }\r\n\r\n    getProducts(): Product[] {\r\n        return this.products;\r\n    }\r\n\r\n    getProduct(id: number): Product {\r\n        return this.products.find(p => this.locator(p,id));\r\n    }\r\n\r\n    saveProduct(product: Product) {\r\n        if(product.id == 0 || product.id == null){\r\n            product.id = this.generateID();\r\n            this.products.push(product);\r\n        }\r\n        else {\r\n            let index = this.products\r\n                  .findIndex( p => this.locator(p, product.id));\r\n            this.products.splice(index, 1, product);\r\n        }\r\n    }\r\n\r\n    deleteProduct(id: number) {\r\n        let index = this.products.findIndex(p => this.locator(p, id));\r\n        if (index > -1){\r\n            this.products.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private generateID(): number {\r\n        let candidate = 100;\r\n        while(this.getProduct(candidate) != null){\r\n            candidate++;\r\n        }\r\n        return candidate;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}