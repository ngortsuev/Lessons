@model  CityViewModel
@{
    ViewData["Title"] = "Create";
}

<h2>Create City</h2>
<form asp-action="Create" asp-controller="City" method="post">
    <div class="form-group">
        <label asp-for="City.Id"></label>
        <input asp-for="City.Id" class="form-control" disabled />
    </div>
    <div class="form-group">
        <label asp-for="City.Name"></label>
        <input asp-for="City.Name" class="form-control" />
    </div>
    <div class="form-group">
        <label>Country</label>
        <select asp-for="City.Country.Id" asp-items="@Model.Countries" class="form-control" onchange="LoadRegions();"></select>
    </div>
    <div class="form-group">
        <label>Region</label>
        <select asp-for="City.Region.Id" asp-items="@Model.Regions" class="form-control"></select>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-default">Cancel</a>
</form>
<script>
    function LoadRegions() {
        
        var countryid = document.getElementById("City_Country_Id").value;
        var regionUrl = `/City/RegionList?countryId=${countryid}`;
        $.ajax({
            url: regionUrl,
            
            success: function (data) {
                if (data != null) {
                    var regions = JSON.parse(data);

                    var regionList = document.getElementById("City_Region_Id");
                    regionList.innerHTML = "";
                    for (var i in regions) {
                        regionList.appendChild(new Option(regions[i].Name, regions[i].Id));
                    }
                }
            }
        });
    }
</script>